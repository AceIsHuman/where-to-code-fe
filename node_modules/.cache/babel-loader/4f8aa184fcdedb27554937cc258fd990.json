{"ast":null,"code":"import _defineProperty from \"/Users/elijahdaniel/WhereToCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/elijahdaniel/WhereToCode/src/components/NetworkSpeed/NetworkTableGeneral.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Table, TableBody, TableHeader, TableCell, TableRow } from 'grommet';\n\nconst NetworkTableGeneral = props => {\n  const borderStyle = {\n    \"color\": \"gold\",\n    \"size\": \"small\",\n    \"style\": \"solid\",\n    \"side\": \"bottom\"\n  };\n\n  const borderStyleCell = _objectSpread({}, borderStyle, {\n    \"side\": \"right\"\n  });\n\n  return React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(TableHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    scope: \"col\",\n    border: borderStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Network General Info\")), React.createElement(TableCell, {\n    scope: \"col\",\n    border: borderStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    scope: \"row\",\n    border: borderStyleCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"ISP\"), React.createElement(TableCell, {\n    border: borderStyleCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props.data.client.isp)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    scope: \"row\",\n    border: borderStyleCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Current IP\"), React.createElement(TableCell, {\n    border: borderStyleCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.data.client.ip)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    scope: \"row\",\n    border: borderStyleCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Server Host\"), React.createElement(TableCell, {\n    border: borderStyleCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.data.server.host)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    scope: \"row\",\n    border: borderStyleCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Server Location\"), React.createElement(TableCell, {\n    border: borderStyleCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, props.data.server.location)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    scope: \"row\",\n    border: borderStyleCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Server Distance\"), React.createElement(TableCell, {\n    border: borderStyleCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, props.data.server.distanceMi, \" mi\"))));\n};\n\nexport default NetworkTableGeneral;","map":{"version":3,"sources":["/Users/elijahdaniel/WhereToCode/src/components/NetworkSpeed/NetworkTableGeneral.jsx"],"names":["React","Table","TableBody","TableHeader","TableCell","TableRow","NetworkTableGeneral","props","borderStyle","borderStyleCell","data","client","isp","ip","server","host","location","distanceMi"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, TableBody, TableHeader, TableCell, TableRow } from 'grommet';\n\nconst NetworkTableGeneral = props => {\n    const borderStyle = {\n        \"color\": \"gold\",\n        \"size\": \"small\",\n        \"style\": \"solid\",\n        \"side\": \"bottom\"\n    }\n\n    const borderStyleCell = {\n        ...borderStyle,\n        \"side\": \"right\"\n    }\n\n    return(\n        <Table>\n            <TableHeader>\n                <TableRow>\n\n                    <TableCell scope=\"col\" border={borderStyle}>\n                        <strong>Network General Info</strong>\n                    </TableCell>\n\n                    <TableCell scope=\"col\" border={borderStyle}></TableCell>\n\n                </TableRow>\n            </TableHeader>\n\n            <TableBody>\n                <TableRow>\n                    <TableCell scope=\"row\" border={borderStyleCell}>\n                        ISP\n                    </TableCell>\n                    <TableCell border={borderStyleCell}>{props.data.client.isp}</TableCell>\n                </TableRow>\n\n                <TableRow>\n                    <TableCell scope=\"row\" border={borderStyleCell}>\n                        Current IP\n                    </TableCell>\n                    <TableCell border={borderStyleCell}>{props.data.client.ip}</TableCell>\n                </TableRow>\n\n                <TableRow>\n                    <TableCell scope=\"row\" border={borderStyleCell}>\n                        Server Host\n                    </TableCell>\n                    <TableCell border={borderStyleCell}>{props.data.server.host}</TableCell>\n                </TableRow>\n\n                <TableRow>\n                    <TableCell scope=\"row\" border={borderStyleCell}>\n                        Server Location\n                    </TableCell>\n                    <TableCell border={borderStyleCell}>{props.data.server.location}</TableCell>\n                </TableRow>\n\n                <TableRow>\n                    <TableCell scope=\"row\" border={borderStyleCell}>\n                        Server Distance\n                    </TableCell>\n                    <TableCell border={borderStyleCell}>{props.data.server.distanceMi} mi</TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    );\n}\n\nexport default NetworkTableGeneral;"]},"metadata":{},"sourceType":"module"}