{"ast":null,"code":"var _jsxFileName = \"/Users/ajohnson/Desktop/lambda/where-to-code-fe/src/components/Session/withAuthorization.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport AuthUserContext from \"./context\"; // import { withFirebase } from \"../../Firebase\";\n\nimport * as ROUTES from \"../../Routes/routes\";\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.HOME);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return React.createElement(AuthUserContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, authUser => condition(authUser) ? React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })) : null);\n    }\n\n  }\n\n  return compose(withRouter // withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;","map":{"version":3,"sources":["/Users/ajohnson/Desktop/lambda/where-to-code-fe/src/components/Session/withAuthorization.js"],"names":["React","withRouter","compose","AuthUserContext","ROUTES","withAuthorization","condition","Component","WithAuthorization","componentDidMount","listener","props","auth","onAuthStateChanged","authUser","history","push","HOME","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAOC,eAAP,MAA4B,WAA5B,C,CACA;;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;;AAEA,MAAMC,iBAAiB,GAAGC,SAAS,IAAIC,SAAS,IAAI;AAClD,QAAMC,iBAAN,SAAgCR,KAAK,CAACO,SAAtC,CAAgD;AAC9CE,IAAAA,iBAAiB,GAAG;AAClB,WAAKC,QAAL,GAAgB,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,kBAAhB,CAAmCC,QAAQ,IAAI;AAC7D,YAAI,CAACR,SAAS,CAACQ,QAAD,CAAd,EAA0B;AACxB,eAAKH,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwBZ,MAAM,CAACa,IAA/B;AACD;AACF,OAJe,CAAhB;AAKD;;AAEDC,IAAAA,oBAAoB,GAAG;AACrB,WAAKR,QAAL;AACD;;AAEDS,IAAAA,MAAM,GAAG;AACP,aACE,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,QAAQ,IACPR,SAAS,CAACQ,QAAD,CAAT,GAAsB,oBAAC,SAAD,oBAAe,KAAKH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtB,GAAsD,IAF1D,CADF;AAOD;;AArB6C;;AAwBhD,SAAOT,OAAO,CACZD,UADY,CAEZ;AAFY,GAAP,CAGLO,iBAHK,CAAP;AAID,CA7BD;;AA+BA,eAAeH,iBAAf","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport AuthUserContext from \"./context\";\n// import { withFirebase } from \"../../Firebase\";\nimport * as ROUTES from \"../../Routes/routes\";\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.HOME);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter\n    // withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n"]},"metadata":{},"sourceType":"module"}