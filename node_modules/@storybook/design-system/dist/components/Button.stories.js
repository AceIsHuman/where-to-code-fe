"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.anchorWrapper = exports.buttonWrapper = exports.containsIcon = exports.disabled = exports.loading = exports.sizes = exports.buttons = exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _addonActions = require("@storybook/addon-actions");

var _Button = require("./Button");

var _Icon = require("./Icon");

var _StoryLinkWrapper = require("./StoryLinkWrapper");

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  border: 1px solid green;\n  background: lightgreen;\n  color: rebeccapurple;\n  padding: 1em;\n  font-size: 1.2em;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var CustomButton = _styledComponents["default"].button(_templateObject());

function ButtonWrapper(props) {
  return _react["default"].createElement(CustomButton, (0, _extends2["default"])({
    onClick: (0, _addonActions.action)('button action click')
  }, props));
}

var _default = {
  title: 'Design System|Button',
  component: _Button.Button
};
exports["default"] = _default;

var buttons = function buttons() {
  return _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(_Button.Button, {
    appearance: "primary"
  }, "Primary"), _react["default"].createElement(_Button.Button, {
    appearance: "secondary"
  }, "Secondary"), _react["default"].createElement(_Button.Button, {
    appearance: "tertiary"
  }, "Tertiary"), _react["default"].createElement(_Button.Button, {
    appearance: "outline"
  }, "Outline"), _react["default"].createElement(_Button.Button, {
    appearance: "primaryOutline"
  }, "Outline primary"), _react["default"].createElement(_Button.Button, {
    appearance: "secondaryOutline"
  }, "Outline secondary"));
};

exports.buttons = buttons;

var sizes = function sizes() {
  return _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(_Button.Button, {
    appearance: "primary"
  }, "Default"), _react["default"].createElement(_Button.Button, {
    appearance: "primary",
    size: "small"
  }, "Small"));
};

exports.sizes = sizes;

var loading = function loading() {
  return _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(_Button.Button, {
    appearance: "primary",
    isLoading: true
  }, "Primary"), _react["default"].createElement(_Button.Button, {
    appearance: "secondary",
    isLoading: true
  }, "Secondary"), _react["default"].createElement(_Button.Button, {
    appearance: "tertiary",
    isLoading: true
  }, "Tertiary"), _react["default"].createElement(_Button.Button, {
    appearance: "outline",
    isLoading: true
  }, "Outline"), _react["default"].createElement(_Button.Button, {
    appearance: "outline",
    isLoading: true,
    loadingText: "Custom..."
  }, "Outline"));
};

exports.loading = loading;

var disabled = function disabled() {
  return _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(_Button.Button, {
    appearance: "primary",
    isDisabled: true
  }, "Primary"), _react["default"].createElement(_Button.Button, {
    appearance: "secondary",
    isDisabled: true
  }, "Secondary"), _react["default"].createElement(_Button.Button, {
    appearance: "tertiary",
    isDisabled: true
  }, "Tertiary"), _react["default"].createElement(_Button.Button, {
    appearance: "outline",
    isDisabled: true
  }, "Outline"));
};

exports.disabled = disabled;

var containsIcon = function containsIcon() {
  return _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(_Button.Button, {
    appearance: "outline",
    containsIcon: true
  }, _react["default"].createElement(_Icon.Icon, {
    icon: "link",
    "aria-label": "Link"
  })), _react["default"].createElement(_Button.Button, {
    appearance: "outline",
    size: "small",
    containsIcon: true
  }, _react["default"].createElement(_Icon.Icon, {
    icon: "link",
    "aria-label": "Link"
  })));
};

exports.containsIcon = containsIcon;

var buttonWrapper = function buttonWrapper() {
  return _react["default"].createElement("div", null, _react["default"].createElement(ButtonWrapper, null, "Original Button Wrapper"), _react["default"].createElement("br", null), _react["default"].createElement(_Button.Button, {
    ButtonWrapper: ButtonWrapper,
    appearance: "primary"
  }, "Button that passes clicks through"));
};

exports.buttonWrapper = buttonWrapper;
buttonWrapper.story = {
  name: 'button wrapper'
};

var anchorWrapper = function anchorWrapper() {
  return _react["default"].createElement("div", null, _react["default"].createElement(_StoryLinkWrapper.StoryLinkWrapper, {
    to: "http://storybook.js.org"
  }, "Original Link Wrapper"), _react["default"].createElement("br", null), _react["default"].createElement(_Button.Button, {
    ButtonWrapper: _StoryLinkWrapper.StoryLinkWrapper,
    appearance: "primary",
    href: "http://storybook.js.org"
  }, "Button that passes href through"));
};

exports.anchorWrapper = anchorWrapper;
anchorWrapper.story = {
  name: 'anchor wrapper'
};